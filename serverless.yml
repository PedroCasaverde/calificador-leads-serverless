# serverless.yml

org: pcasaverde # Usa tu org aquí (PedroCasaverde si te pide)
service: calificador-leads-api

frameworkVersion: '3' # Mantenemos la versión 3

provider:
  name: aws
  runtime: python3.9 # Mantenemos 3.9 para nuestro handler.py
  region: us-east-1
  stage: dev
  memorySize: 1024 # Añadido de tu ejemplo
  timeout: 20 # Añadido de tu ejemplo

  # ¡IMPORTANTE! Usamos el LabRole pre-configurado de AWS Academy
  iam:
    role: arn:aws:iam::013960419123:role/LabRole # ¡ESTE ES EL ARN QUE DEBES VERIFICAR!

  environment: # Variables de entorno para Lambda
    LEADS_TABLE_NAME: leadsTable

functions:
  processLead:
    handler: handler.main
    events:
      - httpApi: # Usamos httpApi para la integración más moderna y CORS
          path: /leads
          method: post
          cors: true # Habilita CORS para que el frontend pueda acceder

resources: # Aquí definimos nuestra tabla DynamoDB y S3
  Resources:
    leadsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: leadsTable # Nombre de la tabla
        AttributeDefinitions:
          - AttributeName: leadId # Nuestra clave primaria
            AttributeType: S # String
        KeySchema:
          - AttributeName: leadId
            KeyType: HASH # Clave de partición
        BillingMode: PAY_PER_REQUEST # Modelo de pago a demanda

    # Definición de S3 Bucket para el frontend
    LeadFrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: calificador-leads-frontend-${sls:stage}-${aws:accountId} # Nombre único del bucket
        AccessControl: PublicRead # Permite acceso público para el hosting estático
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    # Políticas para que el bucket sea accesible públicamente
    LeadFrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref LeadFrontendBucket # Referencia al bucket que acabamos de crear
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Join [ "/", [ !GetAtt LeadFrontendBucket.Arn, "*" ] ]